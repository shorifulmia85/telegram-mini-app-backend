import { Verify3rdFn } from './types.js';
export interface Validate3rdOptions {
    /**
     * Time in seconds which states, how long from creation time init data is considered valid.
     *
     * In other words, in case when authDate + expiresIn is before current time, init data is
     * recognized as expired.
     *
     * In case this value is equal to 0, the function does not check init data expiration.
     * @default 86400 (1 day)
     */
    expiresIn?: number;
    /**
     * When true, uses the test environment public key to validate init data.
     * @default false
     */
    test?: boolean;
}
export type Validate3rdValue = string | URLSearchParams;
/**
 * Validates passed init data using a publicly known Ee25519 key.
 * @param value - value to check.
 * @param botId - bot identifier
 * @param verify - function to verify sign
 * @param options - additional validation options.
 * @throws {SignatureInvalidError} Signature is invalid.
 * @throws {AuthDateInvalidError} "auth_date" property is missing or invalid.
 * @throws {SignatureMissingError} "hash" property is missing.
 * @throws {ExpiredError} Init data is expired.
 */
export declare function validate3rd(value: Validate3rdValue, botId: number, verify: Verify3rdFn<false>, options?: Validate3rdOptions): void | never;
/**
 * Validates passed init data using a publicly known Ee25519 key.
 * @param value - value to check.
 * @param botId - bot identifier
 * @param verify - function to verify sign
 * @param options - additional validation options.
 * @throws {SignatureInvalidError} Signature is invalid.
 * @throws {AuthDateInvalidError} "auth_date" property is missing or invalid.
 * @throws {SignatureMissingError} "hash" property is missing.
 * @throws {ExpiredError} Init data is expired.
 */
export declare function validate3rd(value: Validate3rdValue, botId: number, verify: Verify3rdFn<true>, options?: Validate3rdOptions): Promise<void>;
